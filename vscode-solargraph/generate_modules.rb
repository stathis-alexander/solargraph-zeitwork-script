#!/usr/bin/env ruby

require 'active_support'

folders = ARGV

class String
  def camelize
    self.split('_').collect(&:capitalize).join
  end
end

def dig_filesystem_for_namespaces(folder)
  folders = {}
  Dir.foreach(folder) do |f|
    next if f == '.' || f == '..'
    path = File.join(folder, f)
    next if !File.directory?(path)

    result = dig_filesystem_for_namespaces(path)

    folders[f.camelize] = result
  end

  folders
end

def dfs(hash, depth = 0, file)
  tab_string = depth == 0 ? "" : ("\t" * depth)
  tab_string = tab_string.join('') if tab_string.is_a?(Array)

  hash.each do |key, value|
    start_string = "#{tab_string}module #{key}"
    if value.empty?
      file.write("#{start_string}; end\n")
      next
    end

    file.write("#{start_string}\n")
    dfs(value, depth + 1, file)
    file.write("#{tab_string}end\n")
  end
end

def write_header(file, file_name)
  file.write("# #{file_name}\n")
  file.write("# This file is auto generated by running `make solargraph`. Do not edit this file directly.\n")
  file.write("# It's sole purpose is to help solargraph and vscode navigate rails code.\n")
  file.write("# See https://github.com/castwide/vscode-solargraph/issues/200. \n\n")
end

VSCODE_FOLDER = "vscode-solargraph".freeze

folders.each do |folder|
  folder_path_array = folder.split("/")
  file_name = "#{folder_path_array.pop}.rb"

  folder_path = File.join(VSCODE_FOLDER, *folder_path_array)
  file_path = File.join(folder_path, file_name)

  FileUtils.mkdir_p(folder_path) if !File.directory?(folder_path)

  File.open(file_path, "w") do |file|
    write_header(file, file_name)
    begin
      namespaces = dig_filesystem_for_namespaces(folder)
    rescue Errno::ENOENT
      puts "Folder #{folder} does not exist"
      next
    end
    dfs(namespaces, 0, file);
  end
end
